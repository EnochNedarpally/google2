import { ChevronLeftIcon, ChevronRightIcon } from "@heroicons/react/solid";
import { GetServerSideProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useState } from "react";
import Header from "../components/Header";
import SearchResults from "../components/SearchResults";
import { API_KEY, contextKey } from "../key";
import Response from "../response";
import { Search } from "../types/search.type";
type iProps = {
  result: Search;
};

const Search = ({ result }: iProps) => {
  const router = useRouter();
  const query = router.query.term;
  const startIndex = Number(router.query.start) || 0;

  // Search Results for {query}
  const paginateData=(type:string)=>{
    if(type==='right'){
      router.push(`/search?term=${query}&start=${startIndex + 10}`)
    }
    else{
      router.push(`/search?term=${query}&start=${startIndex - 10}`)
    }
    
  }
  return (
    <div>
      <Head>
        <title>{query} - Google Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-white sticky top-0">
        <Header />
      </div>
      <p className="text-sm mb-4 w-full mx-auto px-3 sm:pl-[5%] md:pl-[14%] lg:pl-32">Search Results for {query}</p>
      <p className="text-gray-700 text-sm mb-4 w-full mx-auto px-3 sm:pl-[5%] md:pl-[14%] lg:pl-32">
        About {result.searchInformation.formattedTotalResults} (
        {result.searchInformation.formattedSearchTime} seconds)
      </p>
      {result.items.map((item) => (
        <SearchResults key={item.link} item={item} />
      ))}
      <div className="flex items-center mx-auto max-w-md">
        <div className={`flex items-center ${startIndex<1 && 'hidden'}`}>
          <span>Previous</span>
          <ChevronLeftIcon className="text-blue-700 w-16" onClick={()=>paginateData('left')} />
        </div>
        <div className="flex items-center">
          <ChevronRightIcon  className="text-blue-700 w-16" onClick={()=>paginateData('right')}/>
          <span>Next</span>
        </div>
      </div>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const useDummyData = true;
  const start=context.query.start || 0;
  const data = useDummyData
    ? Response
    : await fetch(
        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${contextKey}:omuauf_lfve&q=${context.query.term}`
      ).then((res) => res.json());
  return {
    props: {
      result: data,
      start:start,
    },
  };
};

export default Search;
